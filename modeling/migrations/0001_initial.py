# Generated by Django 5.0.5 on 2024-05-08 08:59

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('url', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Snapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Testcase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timeout', models.IntegerField(default=-1)),
                ('command', models.TextField()),
                ('key', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('passed', 'passed'), ('failed', 'failed'), ('todo', 'todo'), ('candidate', 'candidate'), ('candidate2', 'candidate2')], default='candidate', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Trial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('directory', models.TextField()),
                ('status', models.CharField(choices=[('compiling', 'compiling'), ('pending', 'pending'), ('running', 'running'), ('failed', 'failed'), ('passed', 'passed')], default='compiling', max_length=9)),
                ('backup', models.TextField(blank=True, null=True)),
                ('BUILD_NUMBER', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Version',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.AddConstraint(
            model_name='project',
            constraint=models.UniqueConstraint(fields=('url',), name='unique__url'),
        ),
        migrations.AddField(
            model_name='group',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='modeling.project'),
        ),
        migrations.AddField(
            model_name='testcase',
            name='group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='modeling.group'),
        ),
        migrations.AddField(
            model_name='testcase',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='testcase',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='testcases', to='modeling.project'),
        ),
        migrations.AddField(
            model_name='snapshot',
            name='failed',
            field=models.ManyToManyField(blank=True, related_name='failed_snapshots', to='modeling.testcase'),
        ),
        migrations.AddField(
            model_name='snapshot',
            name='passed',
            field=models.ManyToManyField(blank=True, related_name='passed_snapshots', to='modeling.testcase'),
        ),
        migrations.AddField(
            model_name='snapshot',
            name='todo',
            field=models.ManyToManyField(blank=True, related_name='todo_snapshots', to='modeling.testcase'),
        ),
        migrations.AddField(
            model_name='snapshot',
            name='unverified',
            field=models.ManyToManyField(blank=True, related_name='unverified_snapshots', to='modeling.testcase'),
        ),
        migrations.AddField(
            model_name='trial',
            name='testcase',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trials', to='modeling.testcase'),
        ),
        migrations.AddField(
            model_name='testcase',
            name='recent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='modeling.trial'),
        ),
        migrations.AddField(
            model_name='version',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='modeling.project'),
        ),
        migrations.AddField(
            model_name='trial',
            name='version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='modeling.version'),
        ),
        migrations.AddField(
            model_name='snapshot',
            name='version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='snapshots', to='modeling.version'),
        ),
        migrations.AddConstraint(
            model_name='group',
            constraint=models.UniqueConstraint(fields=('project', 'name'), name='unique__group__name__per_project'),
        ),
        migrations.AddConstraint(
            model_name='testcase',
            constraint=models.UniqueConstraint(fields=('project', 'key'), name='unique__testcase__key__per__project'),
        ),
        migrations.AddConstraint(
            model_name='version',
            constraint=models.UniqueConstraint(fields=('project', 'name'), name='unique__version__name__per_project'),
        ),
        migrations.AddConstraint(
            model_name='snapshot',
            constraint=models.UniqueConstraint(fields=('version', 'date'), name='unique__snapshot__per_date'),
        ),
    ]
